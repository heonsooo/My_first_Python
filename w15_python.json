{
  "kind": "Listing",
  "data": {
    "modhash": "",
    "dist": 27,
    "children": [
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "Python",
          "selftext": "As many of us know, we need more moderators here. This is the application form; if you're interested, please fill it in!\n\nIf you have questions about moderating, I'd be happy to answer them.\n\nApplications are now closed! I'll contact people soon.",
          "author_fullname": "t2_628u",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "r/Python moderator application",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/Python",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": null,
          "downs": 0,
          "hide_score": false,
          "name": "t3_fpr67l",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "author_flair_background_color": "",
          "subreddit_type": "public",
          "ups": 49,
          "total_awards_received": 0,
          "media_embed": {},
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 49,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "",
          "edited": 1585757390,
          "author_flair_css_class": "",
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1585314663,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.Python",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;As many of us know, we need more moderators here. This is the application form; if you&amp;#39;re interested, please fill it in!&lt;/p&gt;\n\n&lt;p&gt;If you have questions about moderating, I&amp;#39;d be happy to answer them.&lt;/p&gt;\n\n&lt;p&gt;Applications are now closed! I&amp;#39;ll contact people soon.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": false,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "can_gild": false,
          "spoiler": false,
          "locked": false,
          "author_flair_text": "reticulated",
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": "moderator",
          "subreddit_id": "t5_2qh0y",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "fpr67l",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "aphoenix",
          "discussion_type": null,
          "num_comments": 13,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": "dark",
          "permalink": "/r/Python/comments/fpr67l/rpython_moderator_application/",
          "parent_whitelist_status": "all_ads",
          "stickied": true,
          "url": "https://www.reddit.com/r/Python/comments/fpr67l/rpython_moderator_application/",
          "subreddit_subscribers": 552965,
          "created_utc": 1585285863,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "Python",
          "selftext": "Tell /r/python what you're working on this week! You can be bragging, grousing, sharing your passion, or explaining your pain. Talk about your current project or your pet project; whatever you want to share.",
          "author_fullname": "t2_6l4z3",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "What's everyone working on this week?",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/Python",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": null,
          "downs": 0,
          "hide_score": false,
          "name": "t3_g167bf",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 23,
          "total_awards_received": 0,
          "media_embed": {},
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 23,
          "approved_by": null,
          "author_premium": true,
          "thumbnail": "",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1586902253,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.Python",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Tell &lt;a href=\"/r/python\"&gt;/r/python&lt;/a&gt; what you&amp;#39;re working on this week! You can be bragging, grousing, sharing your passion, or explaining your pain. Talk about your current project or your pet project; whatever you want to share.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": true,
          "is_crosspostable": false,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "can_gild": false,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": "moderator",
          "subreddit_id": "t5_2qh0y",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "g167bf",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "AutoModerator",
          "discussion_type": null,
          "num_comments": 116,
          "send_replies": false,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/Python/comments/g167bf/whats_everyone_working_on_this_week/",
          "parent_whitelist_status": "all_ads",
          "stickied": true,
          "url": "https://www.reddit.com/r/Python/comments/g167bf/whats_everyone_working_on_this_week/",
          "subreddit_subscribers": 552965,
          "created_utc": 1586873453,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "Python",
          "selftext": "",
          "author_fullname": "t2_g532u",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Lad wrote a Python script to download Alexa voice recordings, he didn't expect this email.",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/Python",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": "discussion",
          "downs": 0,
          "hide_score": false,
          "name": "t3_g53lxf",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 5124,
          "total_awards_received": 2,
          "media_embed": {},
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": true,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": "Discussion",
          "can_mod_post": false,
          "score": 5124,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": false,
          "mod_note": null,
          "created": 1587453099,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "i.redd.it",
          "allow_live_comments": true,
          "selftext_html": null,
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": false,
          "pinned": false,
          "over_18": false,
          "all_awardings": [
            {
              "giver_coin_reward": null,
              "subreddit_id": null,
              "is_new": false,
              "days_of_drip_extension": 0,
              "coin_price": 500,
              "id": "award_43c43a35-15c5-4f73-91ef-fe538426435a",
              "penny_donate": null,
              "coin_reward": 100,
              "icon_url": "https://i.redd.it/award_images/t5_22cerq/xe5mw55w5v541_BlessUp.png",
              "days_of_premium": 0,
              "icon_height": 2048,
              "resized_icons": [
                {
                  "url": "https://preview.redd.it/award_images/t5_22cerq/xe5mw55w5v541_BlessUp.png?width=16&amp;height=16&amp;auto=webp&amp;s=e84e08de4b1352e679d612c063584341f56bc2b5",
                  "width": 16,
                  "height": 16
                },
                {
                  "url": "https://preview.redd.it/award_images/t5_22cerq/xe5mw55w5v541_BlessUp.png?width=32&amp;height=32&amp;auto=webp&amp;s=d01d7a3286bb55c235e217736c78c66e2d7d0c18",
                  "width": 32,
                  "height": 32
                },
                {
                  "url": "https://preview.redd.it/award_images/t5_22cerq/xe5mw55w5v541_BlessUp.png?width=48&amp;height=48&amp;auto=webp&amp;s=6ae7d390be614e44f1ec06141d0ba51d65494bff",
                  "width": 48,
                  "height": 48
                },
                {
                  "url": "https://preview.redd.it/award_images/t5_22cerq/xe5mw55w5v541_BlessUp.png?width=64&amp;height=64&amp;auto=webp&amp;s=1c88befd3d95c2ea37b95a7132db98d8a8730ae1",
                  "width": 64,
                  "height": 64
                },
                {
                  "url": "https://preview.redd.it/award_images/t5_22cerq/xe5mw55w5v541_BlessUp.png?width=128&amp;height=128&amp;auto=webp&amp;s=f97d6987f6545f6cb659f1fce7c304278a92f762",
                  "width": 128,
                  "height": 128
                }
              ],
              "icon_width": 2048,
              "start_date": null,
              "is_enabled": true,
              "description": "Prayers up for the blessed. Gives %{coin_symbol}100 Coins to both the author and the community.",
              "end_date": null,
              "subreddit_coin_reward": 100,
              "count": 1,
              "name": "Bless Up (Pro)",
              "icon_format": null,
              "award_sub_type": "GLOBAL",
              "penny_price": null,
              "award_type": "global"
            },
            {
              "giver_coin_reward": null,
              "subreddit_id": null,
              "is_new": false,
              "days_of_drip_extension": 0,
              "coin_price": 125,
              "id": "award_5f123e3d-4f48-42f4-9c11-e98b566d5897",
              "penny_donate": null,
              "coin_reward": 0,
              "icon_url": "https://i.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png",
              "days_of_premium": 0,
              "icon_height": 2048,
              "resized_icons": [
                {
                  "url": "https://preview.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png?width=16&amp;height=16&amp;auto=webp&amp;s=92932f465d58e4c16b12b6eac4ca07d27e3d11c0",
                  "width": 16,
                  "height": 16
                },
                {
                  "url": "https://preview.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png?width=32&amp;height=32&amp;auto=webp&amp;s=d11484a208d68a318bf9d4fcf371171a1cb6a7ef",
                  "width": 32,
                  "height": 32
                },
                {
                  "url": "https://preview.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png?width=48&amp;height=48&amp;auto=webp&amp;s=febdf28b6f39f7da7eb1365325b85e0bb49a9f63",
                  "width": 48,
                  "height": 48
                },
                {
                  "url": "https://preview.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png?width=64&amp;height=64&amp;auto=webp&amp;s=b4406a2d88bf86fa3dc8a45aacf7e0c7bdccc4fb",
                  "width": 64,
                  "height": 64
                },
                {
                  "url": "https://preview.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png?width=128&amp;height=128&amp;auto=webp&amp;s=19555b13e3e196b62eeb9160d1ac1d1b372dcb0b",
                  "width": 128,
                  "height": 128
                }
              ],
              "icon_width": 2048,
              "start_date": null,
              "is_enabled": true,
              "description": "When you come across a feel-good thing.",
              "end_date": null,
              "subreddit_coin_reward": 0,
              "count": 1,
              "name": "Wholesome",
              "icon_format": null,
              "award_sub_type": "GLOBAL",
              "penny_price": null,
              "award_type": "global"
            }
          ],
          "awarders": [],
          "media_only": false,
          "link_flair_template_id": "0df42996-1c5e-11ea-b1a0-0e44e1c5b731",
          "can_gild": false,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh0y",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "g53lxf",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "iEslam",
          "discussion_type": null,
          "num_comments": 60,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/Python/comments/g53lxf/lad_wrote_a_python_script_to_download_alexa_voice/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://i.redd.it/2s0dj8ob12u41.png",
          "subreddit_subscribers": 552965,
          "created_utc": 1587424299,
          "num_crossposts": 2,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "Python",
          "selftext": "",
          "author_fullname": "t2_q6e9bj9",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "I made a python script that organizes a folder like Downloads based on file extensions",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/Python",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": "made-this",
          "downs": 0,
          "hide_score": false,
          "name": "t3_g4pfjj",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 1599,
          "total_awards_received": 0,
          "media_embed": {},
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": true,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": "I Made This",
          "can_mod_post": false,
          "score": 1599,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": false,
          "mod_note": null,
          "created": 1587402297,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "i.redd.it",
          "allow_live_comments": true,
          "selftext_html": null,
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": false,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "link_flair_template_id": "d7dfae22-4113-11ea-b9fe-0e741fe75651",
          "can_gild": false,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh0y",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "g4pfjj",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "MrCynicalEggplant",
          "discussion_type": null,
          "num_comments": 147,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/Python/comments/g4pfjj/i_made_a_python_script_that_organizes_a_folder/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://i.redd.it/kxpfhzxkuxt41.png",
          "subreddit_subscribers": 552965,
          "created_utc": 1587373497,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "Python",
          "selftext": "",
          "author_fullname": "t2_51b1j8t8",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Hey guys, I was bored during the lockdown so I made a fireworks stimulator using python and Pygame. ( Github link in the comments )",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/Python",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": "made-this",
          "downs": 0,
          "hide_score": false,
          "name": "t3_g54tzy",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 36,
          "total_awards_received": 0,
          "media_embed": {},
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": {
            "reddit_video": {
              "fallback_url": "https://v.redd.it/d6bbukyze2u41/DASH_720?source=fallback",
              "height": 720,
              "width": 576,
              "scrubber_media_url": "https://v.redd.it/d6bbukyze2u41/DASH_96",
              "dash_url": "https://v.redd.it/d6bbukyze2u41/DASHPlaylist.mpd",
              "duration": 107,
              "hls_url": "https://v.redd.it/d6bbukyze2u41/HLSPlaylist.m3u8",
              "is_gif": false,
              "transcoding_status": "completed"
            }
          },
          "is_reddit_media_domain": true,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": "I Made This",
          "can_mod_post": false,
          "score": 36,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": false,
          "mod_note": null,
          "created": 1587457578,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "v.redd.it",
          "allow_live_comments": false,
          "selftext_html": null,
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": false,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "link_flair_template_id": "d7dfae22-4113-11ea-b9fe-0e741fe75651",
          "can_gild": false,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh0y",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "g54tzy",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "VikasKumarSaw",
          "discussion_type": null,
          "num_comments": 7,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/Python/comments/g54tzy/hey_guys_i_was_bored_during_the_lockdown_so_i/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://v.redd.it/d6bbukyze2u41",
          "subreddit_subscribers": 552965,
          "created_utc": 1587428778,
          "num_crossposts": 2,
          "media": {
            "reddit_video": {
              "fallback_url": "https://v.redd.it/d6bbukyze2u41/DASH_720?source=fallback",
              "height": 720,
              "width": 576,
              "scrubber_media_url": "https://v.redd.it/d6bbukyze2u41/DASH_96",
              "dash_url": "https://v.redd.it/d6bbukyze2u41/DASHPlaylist.mpd",
              "duration": 107,
              "hls_url": "https://v.redd.it/d6bbukyze2u41/HLSPlaylist.m3u8",
              "is_gif": false,
              "transcoding_status": "completed"
            }
          },
          "is_video": true
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "Python",
          "selftext": "",
          "author_fullname": "t2_itavffl",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Python Program to convert Spotify Playlist into Youtube Playlist",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/Python",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": "made-this",
          "downs": 0,
          "hide_score": false,
          "name": "t3_g51467",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 67,
          "total_awards_received": 0,
          "media_embed": {},
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": {
            "reddit_video": {
              "fallback_url": "https://v.redd.it/m7gm649dd1u41/DASH_1080?source=fallback",
              "height": 1080,
              "width": 1920,
              "scrubber_media_url": "https://v.redd.it/m7gm649dd1u41/DASH_96",
              "dash_url": "https://v.redd.it/m7gm649dd1u41/DASHPlaylist.mpd",
              "duration": 33,
              "hls_url": "https://v.redd.it/m7gm649dd1u41/HLSPlaylist.m3u8",
              "is_gif": false,
              "transcoding_status": "completed"
            }
          },
          "is_reddit_media_domain": true,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": "I Made This",
          "can_mod_post": false,
          "score": 67,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": false,
          "mod_note": null,
          "created": 1587445036,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "v.redd.it",
          "allow_live_comments": false,
          "selftext_html": null,
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": false,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "link_flair_template_id": "d7dfae22-4113-11ea-b9fe-0e741fe75651",
          "can_gild": false,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh0y",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "g51467",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "Claspingtick1",
          "discussion_type": null,
          "num_comments": 9,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/Python/comments/g51467/python_program_to_convert_spotify_playlist_into/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://v.redd.it/m7gm649dd1u41",
          "subreddit_subscribers": 552965,
          "created_utc": 1587416236,
          "num_crossposts": 0,
          "media": {
            "reddit_video": {
              "fallback_url": "https://v.redd.it/m7gm649dd1u41/DASH_1080?source=fallback",
              "height": 1080,
              "width": 1920,
              "scrubber_media_url": "https://v.redd.it/m7gm649dd1u41/DASH_96",
              "dash_url": "https://v.redd.it/m7gm649dd1u41/DASHPlaylist.mpd",
              "duration": 33,
              "hls_url": "https://v.redd.it/m7gm649dd1u41/HLSPlaylist.m3u8",
              "is_gif": false,
              "transcoding_status": "completed"
            }
          },
          "is_video": true
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "Python",
          "selftext": "",
          "author_fullname": "t2_523w4",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Generating a random solvable maze using recursive division",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/Python",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": "made-this",
          "downs": 0,
          "hide_score": false,
          "name": "t3_g4r1au",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 118,
          "total_awards_received": 0,
          "media_embed": {},
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": {
            "reddit_video": {
              "fallback_url": "https://v.redd.it/4t73fgdljyt41/DASH_1080?source=fallback",
              "height": 1080,
              "width": 896,
              "scrubber_media_url": "https://v.redd.it/4t73fgdljyt41/DASH_96",
              "dash_url": "https://v.redd.it/4t73fgdljyt41/DASHPlaylist.mpd",
              "duration": 22,
              "hls_url": "https://v.redd.it/4t73fgdljyt41/HLSPlaylist.m3u8",
              "is_gif": false,
              "transcoding_status": "completed"
            }
          },
          "is_reddit_media_domain": true,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": "I Made This",
          "can_mod_post": false,
          "score": 118,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": false,
          "mod_note": null,
          "created": 1587410654,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "v.redd.it",
          "allow_live_comments": false,
          "selftext_html": null,
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": false,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "link_flair_template_id": "d7dfae22-4113-11ea-b9fe-0e741fe75651",
          "can_gild": false,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh0y",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "g4r1au",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "mutatedllama",
          "discussion_type": null,
          "num_comments": 15,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/Python/comments/g4r1au/generating_a_random_solvable_maze_using_recursive/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://v.redd.it/4t73fgdljyt41",
          "subreddit_subscribers": 552965,
          "created_utc": 1587381854,
          "num_crossposts": 0,
          "media": {
            "reddit_video": {
              "fallback_url": "https://v.redd.it/4t73fgdljyt41/DASH_1080?source=fallback",
              "height": 1080,
              "width": 896,
              "scrubber_media_url": "https://v.redd.it/4t73fgdljyt41/DASH_96",
              "dash_url": "https://v.redd.it/4t73fgdljyt41/DASHPlaylist.mpd",
              "duration": 22,
              "hls_url": "https://v.redd.it/4t73fgdljyt41/HLSPlaylist.m3u8",
              "is_gif": false,
              "transcoding_status": "completed"
            }
          },
          "is_video": true
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "Python",
          "selftext": "Writing a single, simple function and then debugging it for the next 3 hours...\n\nThen, the very next day\n\nWriting 171 lines of code, running it and it works first try, no bugs, no crashes\n\n&amp;#x200B;\n\nI hate coding\n\nI love coding",
          "author_fullname": "t2_5565sxsl",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Do you know what feels great?",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/Python",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": "discussion",
          "downs": 0,
          "hide_score": false,
          "name": "t3_g4oqxb",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 189,
          "total_awards_received": 0,
          "media_embed": {},
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": "Discussion",
          "can_mod_post": false,
          "score": 189,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1587398637,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.Python",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Writing a single, simple function and then debugging it for the next 3 hours...&lt;/p&gt;\n\n&lt;p&gt;Then, the very next day&lt;/p&gt;\n\n&lt;p&gt;Writing 171 lines of code, running it and it works first try, no bugs, no crashes&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;I hate coding&lt;/p&gt;\n\n&lt;p&gt;I love coding&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": false,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "link_flair_template_id": "0df42996-1c5e-11ea-b1a0-0e44e1c5b731",
          "can_gild": false,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh0y",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "g4oqxb",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "hamoliciousRUS",
          "discussion_type": null,
          "num_comments": 41,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/Python/comments/g4oqxb/do_you_know_what_feels_great/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/Python/comments/g4oqxb/do_you_know_what_feels_great/",
          "subreddit_subscribers": 552965,
          "created_utc": 1587369837,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "Python",
          "selftext": "",
          "author_fullname": "t2_djyyzoq",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Random walking art...",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/Python",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": "made-this",
          "downs": 0,
          "hide_score": false,
          "name": "t3_g4ssyt",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 63,
          "total_awards_received": 0,
          "media_embed": {},
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": true,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": "I Made This",
          "can_mod_post": false,
          "score": 63,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": false,
          "mod_note": null,
          "created": 1587418230,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "i.redd.it",
          "allow_live_comments": false,
          "selftext_html": null,
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": false,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "link_flair_template_id": "d7dfae22-4113-11ea-b9fe-0e741fe75651",
          "can_gild": false,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh0y",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "g4ssyt",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "Especuloide",
          "discussion_type": null,
          "num_comments": 15,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/Python/comments/g4ssyt/random_walking_art/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://i.redd.it/bntdqod86zt41.gif",
          "subreddit_subscribers": 552965,
          "created_utc": 1587389430,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "Python",
          "selftext": "",
          "author_fullname": "t2_nsipo",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Python 2.7.18, the last release of Python 2, is now available",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/Python",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": "news",
          "downs": 0,
          "hide_score": false,
          "name": "t3_g4um25",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 35,
          "total_awards_received": 0,
          "media_embed": {},
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": "News",
          "can_mod_post": false,
          "score": 35,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": false,
          "mod_note": null,
          "created": 1587424514,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "blog.python.org",
          "allow_live_comments": false,
          "selftext_html": null,
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": false,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "link_flair_template_id": "0ad780a0-1c5e-11ea-978c-0ee7bacb2bff",
          "can_gild": false,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh0y",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "g4um25",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "numbermaniac",
          "discussion_type": null,
          "num_comments": 7,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/Python/comments/g4um25/python_2718_the_last_release_of_python_2_is_now/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://blog.python.org/2020/04/python-2718-last-release-of-python-2.html",
          "subreddit_subscribers": 552965,
          "created_utc": 1587395714,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "Python",
          "selftext": "",
          "author_fullname": "t2_o8x1j",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "pip 20.1 beta has just been released with the new (experimental) resolver!",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/Python",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": "news",
          "downs": 0,
          "hide_score": false,
          "name": "t3_g56k4x",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 5,
          "total_awards_received": 0,
          "media_embed": {},
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": "News",
          "can_mod_post": false,
          "score": 5,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": false,
          "mod_note": null,
          "created": 1587463975,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "github.com",
          "allow_live_comments": false,
          "selftext_html": null,
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": false,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "link_flair_template_id": "0ad780a0-1c5e-11ea-978c-0ee7bacb2bff",
          "can_gild": false,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh0y",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "g56k4x",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "McSinyx",
          "discussion_type": null,
          "num_comments": 1,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/Python/comments/g56k4x/pip_201_beta_has_just_been_released_with_the_new/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://github.com/pypa/pip/issues/8099",
          "subreddit_subscribers": 552965,
          "created_utc": 1587435175,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "Python",
          "selftext": "",
          "author_fullname": "t2_3hjw15vl",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "reddit chatroom bot in python",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/Python",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": "made-this",
          "downs": 0,
          "hide_score": true,
          "name": "t3_g5azco",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 1,
          "total_awards_received": 0,
          "media_embed": {},
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": "I Made This",
          "can_mod_post": false,
          "score": 1,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": false,
          "mod_note": null,
          "created": 1587483978,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "github.com",
          "allow_live_comments": false,
          "selftext_html": null,
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": true,
          "is_crosspostable": false,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "link_flair_template_id": "d7dfae22-4113-11ea-b9fe-0e741fe75651",
          "can_gild": false,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh0y",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "g5azco",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "_--_GOD_--_",
          "discussion_type": null,
          "num_comments": 0,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/Python/comments/g5azco/reddit_chatroom_bot_in_python/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://github.com/P5YCH0x/Reddit-chatroom-bot",
          "subreddit_subscribers": 552965,
          "created_utc": 1587455178,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "Python",
          "selftext": "New to python here! In class we have been practicing parameters / basic while&amp;for loops in python. Also, if, else etc. Nothing super fancy. My assignment though for the week is to create a program that computes monthly balance. It asks the user for an initial balance and start/end month/year. It keeps running until the end month and year are met. I’m kinda lost on this one and would some advice...I am trying to work in parameters, but it’s tough man. \n\nEDIT: Title should be computing balance per month based on interest. I’m tired sorry!\n\nI am just confused how to like keep increasing everything like the month, then the balance, then when the program even knows when to stop running like",
          "author_fullname": "t2_4gf8znph",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Computing interest per month",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/Python",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": "help",
          "downs": 0,
          "hide_score": true,
          "name": "t3_g5arhm",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 1,
          "total_awards_received": 0,
          "media_embed": {},
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": "Help",
          "can_mod_post": false,
          "score": 1,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "",
          "edited": 1587454328,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1587482841,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.Python",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;New to python here! In class we have been practicing parameters / basic while&amp;amp;for loops in python. Also, if, else etc. Nothing super fancy. My assignment though for the week is to create a program that computes monthly balance. It asks the user for an initial balance and start/end month/year. It keeps running until the end month and year are met. I’m kinda lost on this one and would some advice...I am trying to work in parameters, but it’s tough man. &lt;/p&gt;\n\n&lt;p&gt;EDIT: Title should be computing balance per month based on interest. I’m tired sorry!&lt;/p&gt;\n\n&lt;p&gt;I am just confused how to like keep increasing everything like the month, then the balance, then when the program even knows when to stop running like&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": true,
          "is_crosspostable": false,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "link_flair_template_id": "c685ca8a-4113-11ea-a273-0e02380d75d9",
          "can_gild": false,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh0y",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "g5arhm",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "helpppppppppp123456",
          "discussion_type": null,
          "num_comments": 1,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/Python/comments/g5arhm/computing_interest_per_month/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/Python/comments/g5arhm/computing_interest_per_month/",
          "subreddit_subscribers": 552965,
          "created_utc": 1587454041,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "Python",
          "selftext": "Back in 2015, it started as a university project. But I’ve kept working on it, and others have started contributing as well over the years. Today we thought it was time to officially release PyBoy v1.0.0 on PyPi and GitHub!\n\n[https://github.com/Baekalfen/PyBoy](https://github.com/Baekalfen/PyBoy)\n\n&amp;#x200B;\n\nhttps://reddit.com/link/g484d4/video/hd2yupa7bst41/player\n\n[https://i.imgur.com/jEpnRRz.gifv](https://i.imgur.com/jEpnRRz.gifv)\n\n## What is PyBoy\n\nIn short, it’s a Game Boy emulator written from scratch in pure Python, with additional support for scripting through an API. We’ve added type definitions, which allows us to compile the software using Cython to get performance comparable to emulators written in C and C++.\n\n## Installation\n\nThe installation instructions are simple: Install SDL2 on your system, and install PyBoy through `pip install pyboy`. If you need to compile from source, we also have detailed instructions on the GitHub Wiki for Mac, Linux and Windows.\n\n[https://github.com/Baekalfen/PyBoy/wiki/Installation](https://github.com/Baekalfen/PyBoy/wiki/Installation)\n\n## Features\n\nPyBoy is designed to be accessible from Python, so we support and encourage people who want to make experiments, bots or AI’s to try it out. We are building game-specific wrappers, which at the moment allows programmers to interface with Tetris and Super Mario Land, without any intricate knowledge of the Game Boy. Documentation can be found at: [https://docs.pyboy.dk](https://docs.pyboy.dk/) .\n\nWe also want to learn and experiment with more exotic features. Based on work from a university project, we’ve added rewinding to the emulator. Which means, you’ll be able to turn back time in any game.\n\n&amp;#x200B;\n\nhttps://reddit.com/link/g484d4/video/zofcwc78bst41/player\n\n[https://i.imgur.com/nr9VWwe.gifv](https://i.imgur.com/nr9VWwe.gifv)\n\n## Feedback, Contribute, Learn\n\nWe’d love to hear your feedback, and see the projects you wish to use PyBoy for! We will do our best to make it happen.\n\nPlease give any feedback in the comments below, on our Discord server or create issues/pull-requests on GitHub if you wish.",
          "author_fullname": "t2_i8hny",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 2,
          "clicked": false,
          "title": "Today I’m releasing PyBoy v1.0.0! A Game Boy emulator written in Python, focused on scripting, AI and learning",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/Python",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": "made-this",
          "downs": 0,
          "hide_score": false,
          "media_metadata": {
            "zofcwc78bst41": {
              "status": "valid",
              "e": "RedditVideo",
              "dashUrl": "https://v.redd.it/link/g484d4/asset/zofcwc78bst41/DASHPlaylist.mpd",
              "x": 160,
              "y": 144,
              "hlsUrl": "https://v.redd.it/link/g484d4/asset/zofcwc78bst41/HLSPlaylist.m3u8",
              "id": "zofcwc78bst41",
              "isGif": false
            },
            "hd2yupa7bst41": {
              "status": "valid",
              "e": "RedditVideo",
              "dashUrl": "https://v.redd.it/link/g484d4/asset/hd2yupa7bst41/DASHPlaylist.mpd",
              "x": 160,
              "y": 144,
              "hlsUrl": "https://v.redd.it/link/g484d4/asset/hd2yupa7bst41/HLSPlaylist.m3u8",
              "id": "hd2yupa7bst41",
              "isGif": false
            }
          },
          "name": "t3_g484d4",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 1678,
          "total_awards_received": 3,
          "media_embed": {
            "content": "&lt;iframe class=\"embedly-embed\" src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fimgur.com%2FjEpnRRz%2Fembed%3Fpub%3Dtrue%26ref%3Dhttps%253A%252F%252Fembed.ly%26w%3D500&amp;display_name=Imgur&amp;url=https%3A%2F%2Fimgur.com%2FjEpnRRz&amp;image=https%3A%2F%2Fi.imgur.com%2FjEpnRRz.gif%3Fnoredirect&amp;key=ed8fa8699ce04833838e66ce79ba05f1&amp;type=text%2Fhtml&amp;schema=imgur\" width=\"500\" height=\"338\" scrolling=\"no\" title=\"Imgur embed\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen=\"true\"&gt;&lt;/iframe&gt;",
            "width": 500,
            "scrolling": false,
            "height": 338
          },
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": {
            "type": "i.imgur.com",
            "oembed": {
              "provider_url": "http://imgur.com",
              "version": "1.0",
              "title": "Imgur",
              "url": "https://imgur.com/jEpnRRz",
              "thumbnail_width": 160,
              "height": 338,
              "width": 500,
              "html": "&lt;iframe class=\"embedly-embed\" src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fimgur.com%2FjEpnRRz%2Fembed%3Fpub%3Dtrue%26ref%3Dhttps%253A%252F%252Fembed.ly%26w%3D500&amp;display_name=Imgur&amp;url=https%3A%2F%2Fimgur.com%2FjEpnRRz&amp;image=https%3A%2F%2Fi.imgur.com%2FjEpnRRz.gif%3Fnoredirect&amp;key=ed8fa8699ce04833838e66ce79ba05f1&amp;type=text%2Fhtml&amp;schema=imgur\" width=\"500\" height=\"338\" scrolling=\"no\" title=\"Imgur embed\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen=\"true\"&gt;&lt;/iframe&gt;",
              "provider_name": "Imgur",
              "thumbnail_url": "https://i.imgur.com/jEpnRRz.gif?noredirect",
              "type": "rich",
              "thumbnail_height": 144
            }
          },
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {
            "content": "&lt;iframe class=\"embedly-embed\" src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fimgur.com%2FjEpnRRz%2Fembed%3Fpub%3Dtrue%26ref%3Dhttps%253A%252F%252Fembed.ly%26w%3D500&amp;display_name=Imgur&amp;url=https%3A%2F%2Fimgur.com%2FjEpnRRz&amp;image=https%3A%2F%2Fi.imgur.com%2FjEpnRRz.gif%3Fnoredirect&amp;key=ed8fa8699ce04833838e66ce79ba05f1&amp;type=text%2Fhtml&amp;schema=imgur\" width=\"500\" height=\"338\" scrolling=\"no\" title=\"Imgur embed\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen=\"true\"&gt;&lt;/iframe&gt;",
            "width": 500,
            "scrolling": false,
            "media_domain_url": "https://www.redditmedia.com/mediaembed/g484d4",
            "height": 338
          },
          "link_flair_text": "I Made This",
          "can_mod_post": false,
          "score": 1678,
          "approved_by": null,
          "author_premium": true,
          "thumbnail": "",
          "edited": 1587306511,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {
            "gid_1": 1,
            "gid_2": 2
          },
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1587333665,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.Python",
          "allow_live_comments": true,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Back in 2015, it started as a university project. But I’ve kept working on it, and others have started contributing as well over the years. Today we thought it was time to officially release PyBoy v1.0.0 on PyPi and GitHub!&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/Baekalfen/PyBoy\"&gt;https://github.com/Baekalfen/PyBoy&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://reddit.com/link/g484d4/video/hd2yupa7bst41/player\"&gt;https://reddit.com/link/g484d4/video/hd2yupa7bst41/player&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://i.imgur.com/jEpnRRz.gifv\"&gt;https://i.imgur.com/jEpnRRz.gifv&lt;/a&gt;&lt;/p&gt;\n\n&lt;h2&gt;What is PyBoy&lt;/h2&gt;\n\n&lt;p&gt;In short, it’s a Game Boy emulator written from scratch in pure Python, with additional support for scripting through an API. We’ve added type definitions, which allows us to compile the software using Cython to get performance comparable to emulators written in C and C++.&lt;/p&gt;\n\n&lt;h2&gt;Installation&lt;/h2&gt;\n\n&lt;p&gt;The installation instructions are simple: Install SDL2 on your system, and install PyBoy through &lt;code&gt;pip install pyboy&lt;/code&gt;. If you need to compile from source, we also have detailed instructions on the GitHub Wiki for Mac, Linux and Windows.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/Baekalfen/PyBoy/wiki/Installation\"&gt;https://github.com/Baekalfen/PyBoy/wiki/Installation&lt;/a&gt;&lt;/p&gt;\n\n&lt;h2&gt;Features&lt;/h2&gt;\n\n&lt;p&gt;PyBoy is designed to be accessible from Python, so we support and encourage people who want to make experiments, bots or AI’s to try it out. We are building game-specific wrappers, which at the moment allows programmers to interface with Tetris and Super Mario Land, without any intricate knowledge of the Game Boy. Documentation can be found at: &lt;a href=\"https://docs.pyboy.dk/\"&gt;https://docs.pyboy.dk&lt;/a&gt; .&lt;/p&gt;\n\n&lt;p&gt;We also want to learn and experiment with more exotic features. Based on work from a university project, we’ve added rewinding to the emulator. Which means, you’ll be able to turn back time in any game.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://reddit.com/link/g484d4/video/zofcwc78bst41/player\"&gt;https://reddit.com/link/g484d4/video/zofcwc78bst41/player&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://i.imgur.com/nr9VWwe.gifv\"&gt;https://i.imgur.com/nr9VWwe.gifv&lt;/a&gt;&lt;/p&gt;\n\n&lt;h2&gt;Feedback, Contribute, Learn&lt;/h2&gt;\n\n&lt;p&gt;We’d love to hear your feedback, and see the projects you wish to use PyBoy for! We will do our best to make it happen.&lt;/p&gt;\n\n&lt;p&gt;Please give any feedback in the comments below, on our Discord server or create issues/pull-requests on GitHub if you wish.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": false,
          "pinned": false,
          "over_18": false,
          "all_awardings": [
            {
              "giver_coin_reward": null,
              "subreddit_id": null,
              "is_new": false,
              "days_of_drip_extension": 0,
              "coin_price": 500,
              "id": "gid_2",
              "penny_donate": null,
              "coin_reward": 100,
              "icon_url": "https://www.redditstatic.com/gold/awards/icon/gold_512.png",
              "days_of_premium": 7,
              "icon_height": 512,
              "resized_icons": [
                {
                  "url": "https://www.redditstatic.com/gold/awards/icon/gold_16.png",
                  "width": 16,
                  "height": 16
                },
                {
                  "url": "https://www.redditstatic.com/gold/awards/icon/gold_32.png",
                  "width": 32,
                  "height": 32
                },
                {
                  "url": "https://www.redditstatic.com/gold/awards/icon/gold_48.png",
                  "width": 48,
                  "height": 48
                },
                {
                  "url": "https://www.redditstatic.com/gold/awards/icon/gold_64.png",
                  "width": 64,
                  "height": 64
                },
                {
                  "url": "https://www.redditstatic.com/gold/awards/icon/gold_128.png",
                  "width": 128,
                  "height": 128
                }
              ],
              "icon_width": 512,
              "start_date": null,
              "is_enabled": true,
              "description": "Gives the author a week of Reddit Premium, %{coin_symbol}100 Coins to do with as they please, and shows a Gold Award.",
              "end_date": null,
              "subreddit_coin_reward": 0,
              "count": 2,
              "name": "Gold",
              "icon_format": null,
              "award_sub_type": "GLOBAL",
              "penny_price": null,
              "award_type": "global"
            },
            {
              "giver_coin_reward": null,
              "subreddit_id": null,
              "is_new": false,
              "days_of_drip_extension": 0,
              "coin_price": 100,
              "id": "gid_1",
              "penny_donate": null,
              "coin_reward": 0,
              "icon_url": "https://www.redditstatic.com/gold/awards/icon/silver_512.png",
              "days_of_premium": 0,
              "icon_height": 512,
              "resized_icons": [
                {
                  "url": "https://www.redditstatic.com/gold/awards/icon/silver_16.png",
                  "width": 16,
                  "height": 16
                },
                {
                  "url": "https://www.redditstatic.com/gold/awards/icon/silver_32.png",
                  "width": 32,
                  "height": 32
                },
                {
                  "url": "https://www.redditstatic.com/gold/awards/icon/silver_48.png",
                  "width": 48,
                  "height": 48
                },
                {
                  "url": "https://www.redditstatic.com/gold/awards/icon/silver_64.png",
                  "width": 64,
                  "height": 64
                },
                {
                  "url": "https://www.redditstatic.com/gold/awards/icon/silver_128.png",
                  "width": 128,
                  "height": 128
                }
              ],
              "icon_width": 512,
              "start_date": null,
              "is_enabled": true,
              "description": "Shows the Silver Award... and that's it.",
              "end_date": null,
              "subreddit_coin_reward": 0,
              "count": 1,
              "name": "Silver",
              "icon_format": null,
              "award_sub_type": "GLOBAL",
              "penny_price": null,
              "award_type": "global"
            }
          ],
          "awarders": [],
          "media_only": false,
          "link_flair_template_id": "d7dfae22-4113-11ea-b9fe-0e741fe75651",
          "can_gild": false,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh0y",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "g484d4",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "baekalfen",
          "discussion_type": null,
          "num_comments": 46,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/Python/comments/g484d4/today_im_releasing_pyboy_v100_a_game_boy_emulator/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/Python/comments/g484d4/today_im_releasing_pyboy_v100_a_game_boy_emulator/",
          "subreddit_subscribers": 552965,
          "created_utc": 1587304865,
          "num_crossposts": 1,
          "media": {
            "type": "i.imgur.com",
            "oembed": {
              "provider_url": "http://imgur.com",
              "version": "1.0",
              "title": "Imgur",
              "url": "https://imgur.com/jEpnRRz",
              "thumbnail_width": 160,
              "height": 338,
              "width": 500,
              "html": "&lt;iframe class=\"embedly-embed\" src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fimgur.com%2FjEpnRRz%2Fembed%3Fpub%3Dtrue%26ref%3Dhttps%253A%252F%252Fembed.ly%26w%3D500&amp;display_name=Imgur&amp;url=https%3A%2F%2Fimgur.com%2FjEpnRRz&amp;image=https%3A%2F%2Fi.imgur.com%2FjEpnRRz.gif%3Fnoredirect&amp;key=ed8fa8699ce04833838e66ce79ba05f1&amp;type=text%2Fhtml&amp;schema=imgur\" width=\"500\" height=\"338\" scrolling=\"no\" title=\"Imgur embed\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen=\"true\"&gt;&lt;/iframe&gt;",
              "provider_name": "Imgur",
              "thumbnail_url": "https://i.imgur.com/jEpnRRz.gif?noredirect",
              "type": "rich",
              "thumbnail_height": 144
            }
          },
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "Python",
          "selftext": "",
          "author_fullname": "t2_we2gi",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Email message from Benjamín Peterson (release manager) about Python 2.7.18",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/Python",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": "news",
          "downs": 0,
          "hide_score": false,
          "name": "t3_g59ism",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 1,
          "total_awards_received": 0,
          "media_embed": {},
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": "News",
          "can_mod_post": false,
          "score": 1,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": false,
          "mod_note": null,
          "created": 1587476445,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "lwn.net",
          "allow_live_comments": false,
          "selftext_html": null,
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": true,
          "is_crosspostable": false,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "link_flair_template_id": "0ad780a0-1c5e-11ea-978c-0ee7bacb2bff",
          "can_gild": false,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh0y",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "g59ism",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "the_codifier",
          "discussion_type": null,
          "num_comments": 0,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/Python/comments/g59ism/email_message_from_benjamín_peterson_release/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://lwn.net/Articles/818000/",
          "subreddit_subscribers": 552965,
          "created_utc": 1587447645,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "Python",
          "selftext": "Hey everyone,\n\nI caught myself needing some extra functionality on the Python dictionary and wrote it up, figured someone else might want to check it out as well. It's up at my [github](https://github.com/saskakarsi/trict). Just did some updates a couple of days ago to bring the api closer to the regular python dict.\n\nDon't know if I'd call it every day stuff but got tired of copy-pasting stuff around whenever I needed to traverse through something or flatten a bunch of dictionaries into a pandas DataFrame or felt like I wanted to `__get__` with a list instead of a single string. So stuffed a lot of the stuff I've previously needed into a class and figured I'd just make it a package while I'm at it.\n\nAny functionality you've felt like you've needed? Would love to hear it (as well as any feedback you have on anything, will also answer any questions)!",
          "author_fullname": "t2_592b6vxm",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "I extended the functionality of the beloved Python dictionary. I call it a tricktionary. I'd love your feedback!",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/Python",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": "made-this",
          "downs": 0,
          "hide_score": false,
          "name": "t3_g52542",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 4,
          "total_awards_received": 0,
          "media_embed": {},
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": "I Made This",
          "can_mod_post": false,
          "score": 4,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1587448243,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.Python",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey everyone,&lt;/p&gt;\n\n&lt;p&gt;I caught myself needing some extra functionality on the Python dictionary and wrote it up, figured someone else might want to check it out as well. It&amp;#39;s up at my &lt;a href=\"https://github.com/saskakarsi/trict\"&gt;github&lt;/a&gt;. Just did some updates a couple of days ago to bring the api closer to the regular python dict.&lt;/p&gt;\n\n&lt;p&gt;Don&amp;#39;t know if I&amp;#39;d call it every day stuff but got tired of copy-pasting stuff around whenever I needed to traverse through something or flatten a bunch of dictionaries into a pandas DataFrame or felt like I wanted to &lt;code&gt;__get__&lt;/code&gt; with a list instead of a single string. So stuffed a lot of the stuff I&amp;#39;ve previously needed into a class and figured I&amp;#39;d just make it a package while I&amp;#39;m at it.&lt;/p&gt;\n\n&lt;p&gt;Any functionality you&amp;#39;ve felt like you&amp;#39;ve needed? Would love to hear it (as well as any feedback you have on anything, will also answer any questions)!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": true,
          "is_crosspostable": false,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "link_flair_template_id": "d7dfae22-4113-11ea-b9fe-0e741fe75651",
          "can_gild": false,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh0y",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "g52542",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "saskakarsi",
          "discussion_type": null,
          "num_comments": 1,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/Python/comments/g52542/i_extended_the_functionality_of_the_beloved/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/Python/comments/g52542/i_extended_the_functionality_of_the_beloved/",
          "subreddit_subscribers": 552965,
          "created_utc": 1587419443,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "Python",
          "selftext": "Give me your opinion!\n\nGithub: [https://github.com/JaniniRami07/FlaskLocator](https://github.com/JaniniRami07/FlaskLocator)",
          "author_fullname": "t2_2f0jtk21",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "I made a python geolocator, IP Tracker, Device Info by URL page with Ngrok hosting!",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/Python",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": "made-this",
          "downs": 0,
          "hide_score": false,
          "name": "t3_g522u3",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 5,
          "total_awards_received": 0,
          "media_embed": {},
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": "I Made This",
          "can_mod_post": false,
          "score": 5,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1587448045,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.Python",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Give me your opinion!&lt;/p&gt;\n\n&lt;p&gt;Github: &lt;a href=\"https://github.com/JaniniRami07/FlaskLocator\"&gt;https://github.com/JaniniRami07/FlaskLocator&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": false,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "link_flair_template_id": "d7dfae22-4113-11ea-b9fe-0e741fe75651",
          "can_gild": false,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh0y",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "g522u3",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "Rami_Janini",
          "discussion_type": null,
          "num_comments": 2,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/Python/comments/g522u3/i_made_a_python_geolocator_ip_tracker_device_info/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/Python/comments/g522u3/i_made_a_python_geolocator_ip_tracker_device_info/",
          "subreddit_subscribers": 552965,
          "created_utc": 1587419245,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "Python",
          "selftext": "Hey Guys,   \n\n\nI finally buckled down and started learning python and decided to create something I would be using as my first project, a basic [directory sorter script](https://github.com/gionnelapuz/Python_Directory_Sorter) that sorts files based on their extensions. Wanted to share with you guys as I am happy with it and of course get any feedback :D  \n\n\nhttps://reddit.com/link/g526i3/video/rj3tsi4ul1u41/player",
          "author_fullname": "t2_rttr5dl",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "My first python project! A simple directory sorter script! :D",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/Python",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": "made-this",
          "downs": 0,
          "hide_score": false,
          "media_metadata": {
            "rj3tsi4ul1u41": {
              "status": "valid",
              "e": "RedditVideo",
              "dashUrl": "https://v.redd.it/link/g526i3/asset/rj3tsi4ul1u41/DASHPlaylist.mpd",
              "x": 1280,
              "y": 664,
              "hlsUrl": "https://v.redd.it/link/g526i3/asset/rj3tsi4ul1u41/HLSPlaylist.m3u8",
              "id": "rj3tsi4ul1u41",
              "isGif": false
            }
          },
          "name": "t3_g526i3",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 3,
          "total_awards_received": 0,
          "media_embed": {},
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": "I Made This",
          "can_mod_post": false,
          "score": 3,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "",
          "edited": 1587447304,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1587448361,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.Python",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey Guys,   &lt;/p&gt;\n\n&lt;p&gt;I finally buckled down and started learning python and decided to create something I would be using as my first project, a basic &lt;a href=\"https://github.com/gionnelapuz/Python_Directory_Sorter\"&gt;directory sorter script&lt;/a&gt; that sorts files based on their extensions. Wanted to share with you guys as I am happy with it and of course get any feedback :D  &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://reddit.com/link/g526i3/video/rj3tsi4ul1u41/player\"&gt;https://reddit.com/link/g526i3/video/rj3tsi4ul1u41/player&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": true,
          "is_crosspostable": false,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "link_flair_template_id": "d7dfae22-4113-11ea-b9fe-0e741fe75651",
          "can_gild": false,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh0y",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "g526i3",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "GHLApps",
          "discussion_type": null,
          "num_comments": 0,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/Python/comments/g526i3/my_first_python_project_a_simple_directory_sorter/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/Python/comments/g526i3/my_first_python_project_a_simple_directory_sorter/",
          "subreddit_subscribers": 552965,
          "created_utc": 1587419561,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "Python",
          "selftext": "I made a program with GUI that makes managing and controlling Minecraft servers easier. Works with both vanilla and modded. You just need to set up RCON in the server properties.\n\n&amp;#x200B;\n\n [https://github.com/ChichenManSam/Minecraft\\_Server\\_Controller](https://github.com/ChichenManSam/Minecraft_Server_Controller)",
          "author_fullname": "t2_391qzchz",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Minecraft Server Controller",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/Python",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": "made-this",
          "downs": 0,
          "hide_score": false,
          "name": "t3_g53y0u",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 2,
          "total_awards_received": 0,
          "media_embed": {},
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": "I Made This",
          "can_mod_post": false,
          "score": 2,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1587454304,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.Python",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I made a program with GUI that makes managing and controlling Minecraft servers easier. Works with both vanilla and modded. You just need to set up RCON in the server properties.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/ChichenManSam/Minecraft_Server_Controller\"&gt;https://github.com/ChichenManSam/Minecraft_Server_Controller&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": true,
          "is_crosspostable": false,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "link_flair_template_id": "d7dfae22-4113-11ea-b9fe-0e741fe75651",
          "can_gild": false,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh0y",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "g53y0u",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "ChickenManSam",
          "discussion_type": null,
          "num_comments": 0,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/Python/comments/g53y0u/minecraft_server_controller/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/Python/comments/g53y0u/minecraft_server_controller/",
          "subreddit_subscribers": 552965,
          "created_utc": 1587425504,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "Python",
          "selftext": "Hello Guys! \nPlease I am trying to find a way to convert the pslist.exe output to a json file. \n\nI have the following: \nimport json, subprocess\nfrom datetime import date\ndata = subprocess.Popen(\"pslist\",shell=True,stdout=subprocess.PIPE,stderr=subprocess.PIPE)\nwith open(\"data_file.json\", \"w\") as write_file:\n    json.dump(data, write_file)\n\nI am getting error that subprocess it not a serialized object. Knowing that I am beginner I know I am missing a lot of encoding elements here. \n\nPlease Guys if you have any documentation or resources help me. \n\n\nThanks!",
          "author_fullname": "t2_5qo7xp82",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Convert subprocess(pslist.exe) to json file",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/Python",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": "help",
          "downs": 0,
          "hide_score": false,
          "name": "t3_g57ggg",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 1,
          "total_awards_received": 0,
          "media_embed": {},
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": "Help",
          "can_mod_post": false,
          "score": 1,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1587467429,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.Python",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello Guys! \nPlease I am trying to find a way to convert the pslist.exe output to a json file. &lt;/p&gt;\n\n&lt;p&gt;I have the following: \nimport json, subprocess\nfrom datetime import date\ndata = subprocess.Popen(&amp;quot;pslist&amp;quot;,shell=True,stdout=subprocess.PIPE,stderr=subprocess.PIPE)\nwith open(&amp;quot;data_file.json&amp;quot;, &amp;quot;w&amp;quot;) as write_file:\n    json.dump(data, write_file)&lt;/p&gt;\n\n&lt;p&gt;I am getting error that subprocess it not a serialized object. Knowing that I am beginner I know I am missing a lot of encoding elements here. &lt;/p&gt;\n\n&lt;p&gt;Please Guys if you have any documentation or resources help me. &lt;/p&gt;\n\n&lt;p&gt;Thanks!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": true,
          "is_crosspostable": false,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "link_flair_template_id": "c685ca8a-4113-11ea-a273-0e02380d75d9",
          "can_gild": false,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh0y",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "g57ggg",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "Amksa86",
          "discussion_type": null,
          "num_comments": 5,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/Python/comments/g57ggg/convert_subprocesspslistexe_to_json_file/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/Python/comments/g57ggg/convert_subprocesspslistexe_to_json_file/",
          "subreddit_subscribers": 552965,
          "created_utc": 1587438629,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "Python",
          "selftext": "I’m a beginner.\n\nEdit: What’s an IDE?",
          "author_fullname": "t2_3rw7ac0v",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "What’s PyCharm?",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/Python",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": "help",
          "downs": 0,
          "hide_score": false,
          "name": "t3_g575oz",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 0,
          "total_awards_received": 0,
          "media_embed": {},
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": "Help",
          "can_mod_post": false,
          "score": 0,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1587466279,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.Python",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I’m a beginner.&lt;/p&gt;\n\n&lt;p&gt;Edit: What’s an IDE?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": true,
          "is_crosspostable": false,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "link_flair_template_id": "c685ca8a-4113-11ea-a273-0e02380d75d9",
          "can_gild": false,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh0y",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "g575oz",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "JackNotInTheBox",
          "discussion_type": null,
          "num_comments": 2,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/Python/comments/g575oz/whats_pycharm/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/Python/comments/g575oz/whats_pycharm/",
          "subreddit_subscribers": 552965,
          "created_utc": 1587437479,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "Python",
          "selftext": "",
          "author_fullname": "t2_bh8e2",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Effective Python Testing With Pytest – Real Python",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/Python",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": "resource",
          "downs": 0,
          "hide_score": false,
          "name": "t3_g4u19f",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 9,
          "total_awards_received": 0,
          "media_embed": {},
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": "Resource",
          "can_mod_post": false,
          "score": 9,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": false,
          "mod_note": null,
          "created": 1587422575,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "realpython.com",
          "allow_live_comments": false,
          "selftext_html": null,
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": false,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "link_flair_template_id": "f9716fb2-4113-11ea-a3f1-0ef51f60f757",
          "can_gild": false,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh0y",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "g4u19f",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "endlesstrax",
          "discussion_type": null,
          "num_comments": 0,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/Python/comments/g4u19f/effective_python_testing_with_pytest_real_python/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://realpython.com/pytest-python-testing/",
          "subreddit_subscribers": 552965,
          "created_utc": 1587393775,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "Python",
          "selftext": "&amp;#x200B;\n\nhttps://reddit.com/link/g567ek/video/cu7v8k69v2u41/player\n\n&amp;#x200B;\n\nI made a wOBA (weighted on base average) calculator today. I used beautiful soup and requests to make it happen. Here's a link if you are interested:  [https://github.com/mhaggard25/wOBA-Calculator](https://github.com/mhaggard25/wOBA-Calculator).\n\nIt is kind of dirty, but I am proud of it. First thing that I've finished in a long time. Instructions on how to use it are in the readme on the github page.",
          "author_fullname": "t2_7n9j6j3",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "wOBA Calculator I made using Fangraphs and Baseball-Reference",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/Python",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": "made-this",
          "downs": 0,
          "hide_score": false,
          "media_metadata": {
            "cu7v8k69v2u41": {
              "status": "valid",
              "e": "RedditVideo",
              "dashUrl": "https://v.redd.it/link/g567ek/asset/cu7v8k69v2u41/DASHPlaylist.mpd",
              "x": 1920,
              "y": 1080,
              "hlsUrl": "https://v.redd.it/link/g567ek/asset/cu7v8k69v2u41/HLSPlaylist.m3u8",
              "id": "cu7v8k69v2u41",
              "isGif": false
            }
          },
          "name": "t3_g567ek",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 1,
          "total_awards_received": 0,
          "media_embed": {},
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": "I Made This",
          "can_mod_post": false,
          "score": 1,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "",
          "edited": 1587434178,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1587462679,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.Python",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://reddit.com/link/g567ek/video/cu7v8k69v2u41/player\"&gt;https://reddit.com/link/g567ek/video/cu7v8k69v2u41/player&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;I made a wOBA (weighted on base average) calculator today. I used beautiful soup and requests to make it happen. Here&amp;#39;s a link if you are interested:  &lt;a href=\"https://github.com/mhaggard25/wOBA-Calculator\"&gt;https://github.com/mhaggard25/wOBA-Calculator&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;It is kind of dirty, but I am proud of it. First thing that I&amp;#39;ve finished in a long time. Instructions on how to use it are in the readme on the github page.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": true,
          "is_crosspostable": false,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "link_flair_template_id": "d7dfae22-4113-11ea-b9fe-0e741fe75651",
          "can_gild": false,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh0y",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "g567ek",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "hagg101525",
          "discussion_type": null,
          "num_comments": 0,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/Python/comments/g567ek/woba_calculator_i_made_using_fangraphs_and/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/Python/comments/g567ek/woba_calculator_i_made_using_fangraphs_and/",
          "subreddit_subscribers": 552965,
          "created_utc": 1587433879,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "Python",
          "selftext": "Hey everyone so this last summer at an internship my buddy and I built a Pcap file analyzer that works pretty well. We solved a few of the hack the box challenges with them. It’s still a work in progress but I wanted to share it with the community. It’s built to function a little like how metasploit works. It also will try to recreate files that it finds inside of the network capture. The main purpose of the project for for quick analysis of network captures. \n\nHope you all enjoy \n\nLink to the github repo: https://github.com/abaker2010/bustaPcap",
          "author_fullname": "t2_2ky47li9",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "PCAP file analysis program",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/Python",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": "resource",
          "downs": 0,
          "hide_score": false,
          "name": "t3_g4zadv",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 3,
          "total_awards_received": 0,
          "media_embed": {},
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": "Resource",
          "can_mod_post": false,
          "score": 3,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1587439292,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.Python",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey everyone so this last summer at an internship my buddy and I built a Pcap file analyzer that works pretty well. We solved a few of the hack the box challenges with them. It’s still a work in progress but I wanted to share it with the community. It’s built to function a little like how metasploit works. It also will try to recreate files that it finds inside of the network capture. The main purpose of the project for for quick analysis of network captures. &lt;/p&gt;\n\n&lt;p&gt;Hope you all enjoy &lt;/p&gt;\n\n&lt;p&gt;Link to the github repo: &lt;a href=\"https://github.com/abaker2010/bustaPcap\"&gt;https://github.com/abaker2010/bustaPcap&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": true,
          "is_crosspostable": false,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "link_flair_template_id": "f9716fb2-4113-11ea-a3f1-0ef51f60f757",
          "can_gild": false,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh0y",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "g4zadv",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "Electronic_Mess",
          "discussion_type": null,
          "num_comments": 2,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/Python/comments/g4zadv/pcap_file_analysis_program/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/Python/comments/g4zadv/pcap_file_analysis_program/",
          "subreddit_subscribers": 552965,
          "created_utc": 1587410492,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "Python",
          "selftext": "",
          "author_fullname": "t2_44cb97ia",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Beautiful soup return this when I try to scrape specific sites. I've tried \"html.parser/xml/lxml\" without any success... What is wrong here?",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/Python",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": "discussion",
          "downs": 0,
          "hide_score": false,
          "name": "t3_g55b9m",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 0,
          "total_awards_received": 0,
          "media_embed": {},
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": true,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": "Discussion",
          "can_mod_post": false,
          "score": 0,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": false,
          "mod_note": null,
          "created": 1587459296,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "i.redd.it",
          "allow_live_comments": false,
          "selftext_html": null,
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": true,
          "is_crosspostable": false,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "link_flair_template_id": "0df42996-1c5e-11ea-b1a0-0e44e1c5b731",
          "can_gild": false,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh0y",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "g55b9m",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "aMereMortalxxx",
          "discussion_type": null,
          "num_comments": 5,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/Python/comments/g55b9m/beautiful_soup_return_this_when_i_try_to_scrape/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://i.redd.it/ohdvjk66k2u41.png",
          "subreddit_subscribers": 552965,
          "created_utc": 1587430496,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "Python",
          "selftext": "I'm planning on making a management/tycoon game similar to Air tycoon 3  [https://play.google.com/store/apps/details?id=com.tradegamelab.at3&amp;hl=en\\_GB](https://play.google.com/store/apps/details?id=com.tradegamelab.at3&amp;hl=en_GB)  \n\nI'm confident I can make the logic but I'm struggling to make a 2D world map which can be moved and zoomed into as well as having buttons (airports) on that map which the player can interact with.  I currently don't know which python module could pull this off and need some advice! It doesn't have to be perfect and any suggestion is welcome.\n\nThe goal is to get better at python and make an enjoyable game at the same time. \n\nAll suggestions are appreciated!",
          "author_fullname": "t2_lsyz0o7",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Advice for top-down 2D tycoon/management game",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/Python",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": "help",
          "downs": 0,
          "hide_score": false,
          "name": "t3_g550g8",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 1,
          "total_awards_received": 0,
          "media_embed": {},
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": "Help",
          "can_mod_post": false,
          "score": 1,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1587458196,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.Python",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m planning on making a management/tycoon game similar to Air tycoon 3  &lt;a href=\"https://play.google.com/store/apps/details?id=com.tradegamelab.at3&amp;amp;hl=en_GB\"&gt;https://play.google.com/store/apps/details?id=com.tradegamelab.at3&amp;amp;hl=en_GB&lt;/a&gt;  &lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m confident I can make the logic but I&amp;#39;m struggling to make a 2D world map which can be moved and zoomed into as well as having buttons (airports) on that map which the player can interact with.  I currently don&amp;#39;t know which python module could pull this off and need some advice! It doesn&amp;#39;t have to be perfect and any suggestion is welcome.&lt;/p&gt;\n\n&lt;p&gt;The goal is to get better at python and make an enjoyable game at the same time. &lt;/p&gt;\n\n&lt;p&gt;All suggestions are appreciated!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": true,
          "is_crosspostable": false,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "link_flair_template_id": "c685ca8a-4113-11ea-a273-0e02380d75d9",
          "can_gild": false,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh0y",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "g550g8",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "blu_pi",
          "discussion_type": null,
          "num_comments": 4,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/Python/comments/g550g8/advice_for_topdown_2d_tycoonmanagement_game/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/Python/comments/g550g8/advice_for_topdown_2d_tycoonmanagement_game/",
          "subreddit_subscribers": 552965,
          "created_utc": 1587429396,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "Python",
          "selftext": "",
          "author_fullname": "t2_1mg76nw",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Learn how to Deploy Django to the Cloud (code and instructions on github)",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/Python",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": "web",
          "downs": 0,
          "hide_score": false,
          "name": "t3_g540xo",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 1,
          "total_awards_received": 0,
          "media_embed": {
            "content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/hYMTvK5MpQI?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;",
            "width": 600,
            "scrolling": false,
            "height": 338
          },
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": {
            "type": "youtube.com",
            "oembed": {
              "provider_url": "https://www.youtube.com/",
              "version": "1.0",
              "title": "Deploy Python Django Application to a Linux Cloud Server (One Hour Django Project Part 2)",
              "type": "video",
              "thumbnail_width": 480,
              "height": 338,
              "width": 600,
              "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/hYMTvK5MpQI?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;",
              "author_name": "SATSifaction",
              "provider_name": "YouTube",
              "thumbnail_url": "https://i.ytimg.com/vi/hYMTvK5MpQI/hqdefault.jpg",
              "thumbnail_height": 360,
              "author_url": "https://www.youtube.com/channel/UCyVIfVgx77jslb0U5h-zhLQ"
            }
          },
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {
            "content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/hYMTvK5MpQI?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;",
            "width": 600,
            "scrolling": false,
            "media_domain_url": "https://www.redditmedia.com/mediaembed/g540xo",
            "height": 338
          },
          "link_flair_text": "Web Development",
          "can_mod_post": false,
          "score": 1,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": false,
          "mod_note": null,
          "created": 1587454581,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "youtu.be",
          "allow_live_comments": false,
          "selftext_html": null,
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": true,
          "is_crosspostable": false,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "link_flair_template_id": "5d2397d8-4114-11ea-82a6-0ec7a89f8bbb",
          "can_gild": false,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh0y",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "g540xo",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "satssehgal",
          "discussion_type": null,
          "num_comments": 0,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/Python/comments/g540xo/learn_how_to_deploy_django_to_the_cloud_code_and/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://youtu.be/hYMTvK5MpQI",
          "subreddit_subscribers": 552965,
          "created_utc": 1587425781,
          "num_crossposts": 0,
          "media": {
            "type": "youtube.com",
            "oembed": {
              "provider_url": "https://www.youtube.com/",
              "version": "1.0",
              "title": "Deploy Python Django Application to a Linux Cloud Server (One Hour Django Project Part 2)",
              "type": "video",
              "thumbnail_width": 480,
              "height": 338,
              "width": 600,
              "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/hYMTvK5MpQI?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;",
              "author_name": "SATSifaction",
              "provider_name": "YouTube",
              "thumbnail_url": "https://i.ytimg.com/vi/hYMTvK5MpQI/hqdefault.jpg",
              "thumbnail_height": 360,
              "author_url": "https://www.youtube.com/channel/UCyVIfVgx77jslb0U5h-zhLQ"
            }
          },
          "is_video": false
        }
      }
    ],
    "after": "t3_g540xo",
    "before": null
  }
}